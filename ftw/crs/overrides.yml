version: "v0.0.0"
meta:
  engine: "coraza"
  platform: "go"
  annotations:
    - purpose: "Overrides for CRS test suite running against Coraza deployed as a Go filter"
test_overrides:
  - rule_id: 911100
    test_ids: [5,7]
    reason: |
       Invalid HTTP methods TEST and FOO are directly rejected by Envoy with Error 400.
       On Apache these request reach mod_security and the rule blocks.
    output:
      status: 400
      log:
        no_expect_ids: [911100]
  - rule_id: 920100
    test_ids: [4]
    reason: |
       Rule 911100 drops CONNECT with "Method is not allowed by policy" message.
       Is this intended?
    output:
      status: 404
      log:
        no_expect_ids: [920100]
        expect_ids: [911100]
  - rule_id: 920100
    test_ids: [10]
    reason: |
       Invalid HTTP method REALLYLONGUNREALMETHOD is directly rejected by envoy with HTTP 400 response.
       The request does not reach coraza therefore the rule is not triggered.
    output:
      status: 400
      log:
        no_expect_ids: [920100]
  - rule_id: 920100
    test_ids: [14]
    reason: |
      14: Invalid HTTP request line (method |GET) is directly rejected by Envoy with Error 400.
    output:
      status: 400
      log:
        no_expect_ids: [920100]




# WIP (taken from https://github.com/corazawaf/coraza/blob/main/testing/coreruleset/.ftw-overrides.yml)
 # - rule_id: 920100
 #   test_ids: [8]
 #   reason: |
 #     On Apache is not allowed to put a colon in the path. Go/http allows it.
 #     Note that the colon is a legal character in a regular path segment, according to the RFC.
 #   output:
 #     status: 200
 #     log:
 #       no_expect_ids: [920100]
 # - rule_id: 920270
 #   test_ids: [4]
 #   reason: "Rule works, Apache test expects status 400"
 #   output:
 #     log:
 #       expect_ids: [920270]
 # - rule_id: 920274
 #   test_ids: [1]
 #   reason: "Host validation. Apache expects status 400. Coraza correctly triggers the rule 920274"
 #   output:
 #     log:
 #       expect_ids: [920274]
 # - rule_id: 920290
 #   test_ids: [1]
 #   reason: "TODO"
 #   output:
 #     log:
 #       expect_ids: [920280] # TODO: understand why 920280 (Missing Host Header) is triggered and not 920290 (Empty Host header). See what go-ftw sends.
 # - rule_id: 920290
 #   test_ids: [4]
 #   reason: "TODO"
 #   output:
 #     log:
 #       expect_ids: [920280] # TODO: understand why 920280 (Missing Host Header) is triggered and not 920290 (Empty Host header). See what go-ftw sends.
 # - rule_id: 920430
 #   test_ids: [8]
 #   reason: "Go/http does not allow HTTP/3.0 - 505 HTTP Version Not Supported"
 #   output:
 #     status: 505
 #     log:
 #       no_expect_ids: [920430]

 # - rule_id: 922130
 #   test_ids: [1,2,7]
 #   reason: "Multipart parsing tests. 922130 rule is not reached, Coraza triggers rule 200003 (MULTIPART_STRICT_ERROR) at parsing time"
 #   output:
 #     log:
 #       expect_ids: [200003]
 # - rule_id: 922130
 #   test_ids: [4]
 #   reason: |
 #     Multipart parsing tests. A space caracther is not in the valid range. 0x20 character raises MULTIPART_STRICT_ERROR (see multipart_error.yaml engine test),
 #     But 922130-4 test does not. In this case, rule 922130 is matched.
 #   output:
 #     log:
 #       expect_ids: [922130]
 # - rule_id: 922130
 #   test_ids: [3,5,6]
 #   reason: "Valid Multipart parsing payloads. Coraza should not trigger rules 200002 (REQBODY_ERROR), 200003 (MULTIPART_STRICT_ERROR), 922130"
 #   output:
 #     log:
 #       no_expect_ids: [200002,200003,922130]
