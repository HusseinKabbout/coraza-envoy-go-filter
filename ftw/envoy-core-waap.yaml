# Copyright © 2023 Axkea, spacewander
# Copyright © 2025 United Security Providers AG, Switzerland
# SPDX-License-Identifier: Apache-2.0
---
static_resources:
  listeners:
    - name: listener_0
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 8090
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                stat_prefix: ingress_http
                http_filters:
                  - name: envoy.filters.http.golang
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.golang.v3alpha.Config
                      library_id: coraza-waf
                      library_path: /etc/envoy/coraza-waf.so
                      plugin_name: coraza-waf
                      plugin_config:
                          "@type": type.googleapis.com/xds.type.v3.TypedStruct
                          value:
                              directives: |
                                {
                                  "waf0":{
                                    "simple_directives":[
                                      "Include @demo-conf",
                                      "Include @ftw-conf",
                                      "Include @usp_gql/*.conf"
                                    ]
                                  },
                                  "waf1":{
                                    "simple_directives":[
                                      "SecRuleEngine On",
                                      "Include @crs-setup-conf",
                                      "SecAction \"id:100000,phase:1,nolog,pass,t:none,setvar:tx.inbound_anomaly_score_threshold=5,setvar:tx.outbound_anomaly_score_threshold=4,setvar:tx.inbound_blocked=false,setvar:tx.outbound_blocked=false,setvar:tx.crs_setup_version=4.9.0\"",
                                      "SecAction \"id:100001,phase:1,pass,nolog,t:none,setvar:tx.detection_paranoia_level=4\"",
                                      "SecAction \"id:100002,phase:1,pass,nolog,t:none,setvar:tx.blocking_paranoia_level=4\"",
                                      "SecRequestBodyAccess on",
                                      "SecRequestBodyLimit 1048576",
                                      "SecRequestBodyLimitAction ProcessPartial",
                                      "SecRule REQUEST_HEADERS:Content-Type \"text/xml\" \"id:100003,phase:1,t:none,t:lowercase,pass,nolog,ctl:requestBodyProcessor=XML\"",
                                      "SecRule REQUEST_HEADERS:Content-Type \"application/json\" \"id:100004,phase:1,t:none,t:lowercase,pass,nolog,ctl:requestBodyProcessor=JSON\"",
                                      "SecRule REQBODY_ERROR \"!@eq 0\" \"id:100005, phase:2,t:none,log,pass,status:400,msg:'Failed to parse request body.',logdata:'%{reqbody_error_msg}',severity:2\"",
                                      "SecResponseBodyAccess off",
                                      "SecDefaultAction \"phase:5,log,auditlog,pass\"",
                                      "Include @owasp_crs/REQUEST-901-INITIALIZATION.conf",
                                      "Include @owasp_crs/REQUEST-913-SCANNER-DETECTION.conf",
                                      "Include @owasp_crs/REQUEST-920-PROTOCOL-ENFORCEMENT.conf",
                                      "Include @owasp_crs/REQUEST-921-PROTOCOL-ATTACK.conf",
                                      "Include @owasp_crs/REQUEST-922-MULTIPART-ATTACK.conf",
                                      "Include @owasp_crs/REQUEST-930-APPLICATION-ATTACK-LFI.conf",
                                      "Include @owasp_crs/REQUEST-931-APPLICATION-ATTACK-RFI.conf",
                                      "Include @owasp_crs/REQUEST-932-APPLICATION-ATTACK-RCE.conf",
                                      "Include @owasp_crs/REQUEST-933-APPLICATION-ATTACK-PHP.conf",
                                      "Include @owasp_crs/REQUEST-934-APPLICATION-ATTACK-GENERIC.conf",
                                      "Include @owasp_crs/REQUEST-941-APPLICATION-ATTACK-XSS.conf",
                                      "Include @owasp_crs/REQUEST-942-APPLICATION-ATTACK-SQLI.conf",
                                      "Include @owasp_crs/REQUEST-943-APPLICATION-ATTACK-SESSION-FIXATION.conf",
                                      "Include @owasp_crs/REQUEST-944-APPLICATION-ATTACK-JAVA.conf",
                                      "SecAction \"id:300005, phase:1, nolog, pass, ctl:ruleEngine=DetectionOnly, ctl:ruleRemoveById=910000, setvar:tx.blocking_paranoia_level=4, setvar:tx.crs_validate_utf8_encoding=1, setvar:tx.arg_name_length=100, setvar:tx.arg_length=400, setvar:tx.total_arg_length=64000, setvar:tx.max_num_args=255, setvar:tx.max_file_size=64100, setvar:tx.combined_file_sizes=65535\"",
                                      "SecRule REQUEST_HEADERS:X-CRS-Test \"@rx ^.*$\" \"id:300001, phase:1, pass, t:none, log, msg:'X-CRS-Test %{MATCHED_VAR}', ctl:ruleRemoveById=1-999999\"",
                                      "Include @owasp_crs/REQUEST-949-BLOCKING-EVALUATION.conf",
                                      "Include @owasp_crs/RESPONSE-959-BLOCKING-EVALUATION.conf",
                                      "Include @owasp_crs/RESPONSE-980-CORRELATION.conf",
                                      "SecRuleRemoveByID 949110",
                                      "SecRuleRemoveByID 949111",
                                      "SecRuleRemoveByID 959100",
                                      "SecRuleRemoveByID 959101"
                                    ]
                                  }
                                }
                              default_directive: "waf1"
                              host_directive_map: |
                                {
                                  "fuu.example.com":"waf0",
                                  "foo.example.com":"waf1",
                                  "bar.example.com":"waf1"
                                }
                  - name: envoy.filters.http.router
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
                route_config:
                  name: local_route
                  virtual_hosts:
                    - name: local_service
                      domains: ["*"]
                      routes:
                        - match:
                            prefix: "/"
                          route:
                            host_rewrite_literal: 0.0.0.0:8080
                            cluster: service_gin
  clusters:
    - name: service_gin
      type: LOGICAL_DNS
      # Comment out the following line to test on v6 networks
      dns_lookup_family: V4_ONLY
      load_assignment:
        cluster_name: service_gin
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: albedo
                      port_value: 8080
admin:
  access_log_path: /dev/null
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 9999
